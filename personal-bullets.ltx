\rsec{Personal Projects}

\begin{enumerate}[ ]
\entry{Semantic Diff}{\link{jelv.is/cow}}

  \begin{experience}
  \item Working on a semantic diff  and merge tool in Haskell codenamed
    \texttt{cow} that
    \begin{itemize}
    \item Compares programs by diffing and analyzing the parse trees
    \item Finds matching subtrees to robustly detect moved blocks of
      code
      \begin{itemize}[label=$\circ$]
      \item can detect blocks of code that are both modified
        and moved \emph{simultaneously}
      \end{itemize}
    \item Does scope analysis to find renamed variables
    \item Can do three-way merges with more extensive, semantically aware conflict resolution
    \end{itemize}
  \end{experience}

\entry{TPL}{\link{jelv.is/tpl}}

  \begin{experience}
  \item Designed and implemented (in Haskell) a dynamically typed
    scripting language, TPL
    \begin{itemize}
    \item Influenced by Self, JavaScript, Lua, Scheme and Haskell
    \item Has some interesting features:
      \begin{itemize}[label=$\circ$]
      \item ``Laziness on demand''---fine control over what gets
        evaluated when
      \item A unified system for variable scope and object-oriented
        programming
      \end{itemize}
    \item Some silly features as well, like being able to change
      operator precedence at runtime
    \end{itemize}
  \end{experience}

% \entry{Prolog}{\link{jelv.is/prolog}}

%   \begin{experience}
%   \item Wrote a simple Prolog interpreter in Haskell
%     \begin{itemize}
%     \item The main goal is to introduce intermediate Haskell concepts like the list monad
%     \item Optimized for clarity and conciseness rather than
%       performance or features
%       \begin{itemize}[label=$\circ$]
%       \item The Prolog logic (unification, resolution, etc) is 70 lines of idiomatic
%         Haskell
%       \item Does not support IO, arithmetic or the cut operator
%       \end{itemize}
%     \end{itemize}
%   \end{experience}

% \entry{Functional Reactive Programming}{\link{jelv.is/frp}}

%   \begin{experience}
%   \item A survey of techniques for Functional Reactive Programming (FRP).
%     \begin{itemize}
%     \item Did a 20-minute presentation teaching people about FRP, with
%       some slides
%       \begin{itemize}[label=$\circ$]
%       \item \link{jelv.is/frp/slides.html}
%       \item Slides do not work in all browsers, unfortunately
%       \item Goes into both using FRP in practice and the theory behind it
%       \end{itemize}
%     \item Wrote a simple applet for John Conway's game of life.
%     \item Primarily didactic: simple code used to demonstrate basic FRP concepts.
%     \item UI code is short and declarative, using the Reactive Banana
%       FRP framework
%     \end{itemize}
%   \end{experience}

\si{More} I have more projects at my website <\url{http://jelv.is/projects.html}> and on my GitHub account <\url{http://github.com/TikhonJelvis}>. I also have a few packages up on Hackage: \texttt{modular-arithmetic}, \texttt{array-forth} and \texttt{mcmc-synthesis}.

\end{enumerate}
